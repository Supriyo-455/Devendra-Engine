Working:
    [] Create Platform independent renderer
    
TODO(Important):
    [] Create Logging library.
    [] Implement camera.
    [] Remove global window Handles and Opengl Contexts?
    [] Setup compiler switches for performance counter and wireframing.
    [] Create Build system using python and sCons
    [] Integreate ImGUI
    [] Mouse interface.
    [] Keyboard interface (Improve the existing one).
    [] Add Criterion unit testing for code
    [] Migrate math operations to SIMD operations

TODO(Future Upgrade):
    [] Create sound interface with DirectSound.
    [] Reorganize the glext.h and wglext.h
    [] Some weird memory issue, Free memory after resizing the screen
    [] Implement a build system
    [] Improve the build.bat file
    [] Refactor the codebase.
    [] Implement asin() and acos() function without math.h
    
Backlog:
    [] Move from C style to Object Oriented C++ style?
    [] Linux system porting
    [] Create debug interface
    [] Integrate CMAKE for build system

Completed:
    [] Get a window up and running.
    [] Use Modern opengl version in Win32 API
    [] Implement a triangle with modern opengl and win32 API.
    [] Seperate Fragment shader and Vertex shader to different files
    [] Seperate OpenGL specific codes.
    [] Fix Unload Class Error.
    [] Fix inconsistent framerate and Window messages.
    [] Vsync and color transition rectangle example.
    [] Implement a colorful triangle with rainbow color.
    [] Textures in opengl.
    [] Ship opengl code to a library.
    [] Different translational unit for different files.
    [] Make a math library.
    [] Create benchmarking details for cpu execution time and performance